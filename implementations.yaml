---

pqcrypto_version: 0.16.1
traits_version: 0.3.4

kems:
  kyber:
    version: 0.7.6
    x86_avx2_guard: 'target_arch == "x86_64" && avx2_enabled && !is_windows && !is_macos'
    implementations: [clean, avx2, aarch64]
    schemes:
      - name: kyber512
        implementations: [clean, avx2, aarch64]
      - name: kyber768
        implementations: [clean, avx2, aarch64]
      - name: kyber1024
        implementations: [clean, avx2, aarch64]
      - name: kyber512-90s
        implementations: [clean, avx2]
      - name: kyber768-90s
        implementations: [clean, avx2]
      - name: kyber1024-90s
        implementations: [clean, avx2]
  classicmceliece:
    version: 0.1.7
    notes: |
      This implementation requires a lot of stack space.
      You need to specify ``RUST_MIN_STACK=800000000``, probably.
    x86_avx2_guard: 'target_arch == "x86_64" && avx2_enabled && !is_windows'
    implementations: [vec, clean, avx]
    schemes:
      - name: mceliece348864
        implementations: [vec, clean, avx]
      - name: mceliece348864f
        implementations: [vec, clean, avx]
      - name: mceliece460896
        implementations: [vec, clean, avx]
      - name: mceliece460896f
        implementations: [vec, clean, avx]
      - name: mceliece6688128
        implementations: [vec, clean, avx]
        doctest: no
      - name: mceliece6688128f
        implementations: [vec, clean, avx]
        doctest: no
      - name: mceliece6960119
        implementations: [vec, clean, avx]
        doctest: no
      - name: mceliece6960119f
        implementations: [vec, clean, avx]
        doctest: no
      - name: mceliece8192128
        implementations: [vec, clean, avx]
        doctest: no
      - name: mceliece8192128f
        implementations: [vec, clean, avx]
        doctest: no
  hqc:
    version: 0.1.6
    implementations: [clean]
    schemes:
      - name: hqc-rmrs-128
        implementations: [clean] # avx2 is excluded
      - name: hqc-rmrs-192
        implementations: [clean] # avx2 is excluded
      - name: hqc-rmrs-256
        implementations: [clean] # avx2 is excluded


signs:
  dilithium:
    version: 0.4.6
    x86_avx2_guard: 'target_arch == "x86_64" && avx2_enabled && !is_windows'
    implementations: [clean, avx2, aarch64]
    schemes:
      - name: dilithium2
        implementations: [clean, avx2, aarch64]
      - name: dilithium3
        implementations: [clean, avx2, aarch64]
      - name: dilithium5
        implementations: [clean, avx2, aarch64]
      - name: dilithium2aes
        implementations: [clean, avx2]
      - name: dilithium3aes
        implementations: [clean, avx2]
      - name: dilithium5aes
        implementations: [clean, avx2]
  falcon:
    version: 0.2.10
    implementations: [clean, avx2]
    schemes:
      - name: falcon-512
        implementations: [clean, avx2]
      - name: falcon-1024
        implementations: [clean, avx2]
  sphincsplus:
    version: 0.6.4
    implementations: [clean, aesni, avx2]
    schemes:
      - name: sphincs-haraka-128f-robust
        implementations: [clean, aesni]
      - name: sphincs-haraka-128f-simple
        implementations: [clean, aesni]
      - name: sphincs-haraka-128s-robust
        implementations: [clean, aesni]
      - name: sphincs-haraka-128s-simple
        implementations: [clean, aesni]
      - name: sphincs-haraka-192f-robust
        implementations: [clean, aesni]
      - name: sphincs-haraka-192f-simple
        implementations: [clean, aesni]
      - name: sphincs-haraka-192s-robust
        implementations: [clean, aesni]
      - name: sphincs-haraka-192s-simple
        implementations: [clean, aesni]
      - name: sphincs-haraka-256f-robust
        implementations: [clean, aesni]
      - name: sphincs-haraka-256f-simple
        implementations: [clean, aesni]
      - name: sphincs-haraka-256s-robust
        implementations: [clean, aesni]
      - name: sphincs-haraka-256s-simple
        implementations: [clean, aesni]
      - name: sphincs-shake256-128f-robust
        implementations: [clean, avx2]
      - name: sphincs-shake256-128f-simple
        implementations: [clean, avx2]
      - name: sphincs-shake256-128s-robust
        implementations: [clean, avx2]
      - name: sphincs-shake256-128s-simple
        implementations: [clean, avx2]
      - name: sphincs-shake256-192f-robust
        implementations: [clean, avx2]
      - name: sphincs-shake256-192f-simple
        implementations: [clean, avx2]
      - name: sphincs-shake256-192s-robust
        implementations: [clean, avx2]
      - name: sphincs-shake256-192s-simple
        implementations: [clean, avx2]
      - name: sphincs-shake256-256f-robust
        implementations: [clean, avx2]
      - name: sphincs-shake256-256f-simple
        implementations: [clean, avx2]
      - name: sphincs-shake256-256s-robust
        implementations: [clean, avx2]
      - name: sphincs-shake256-256s-simple
        implementations: [clean, avx2]
      - name: sphincs-sha256-128f-robust
        implementations: [clean, avx2]
      - name: sphincs-sha256-128f-simple
        implementations: [clean, avx2]
      - name: sphincs-sha256-128s-robust
        implementations: [clean, avx2]
      - name: sphincs-sha256-128s-simple
        implementations: [clean, avx2]
      - name: sphincs-sha256-192f-robust
        implementations: [clean, avx2]
      - name: sphincs-sha256-192f-simple
        implementations: [clean, avx2]
      - name: sphincs-sha256-192s-robust
        implementations: [clean, avx2]
      - name: sphincs-sha256-192s-simple
        implementations: [clean, avx2]
      - name: sphincs-sha256-256f-robust
        implementations: [clean, avx2]
      - name: sphincs-sha256-256f-simple
        implementations: [clean, avx2]
      - name: sphincs-sha256-256s-robust
        implementations: [clean, avx2]
      - name: sphincs-sha256-256s-simple
        implementations: [clean, avx2]

#  vim: set ft=yaml ts=2 sw=2 tw=0 et :
